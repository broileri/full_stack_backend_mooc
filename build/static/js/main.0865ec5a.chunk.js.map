{"version":3,"sources":["services/persons.js","components/FilterForm.js","components/PersonForm.js","components/Person.js","components/PersonList.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","FilterForm","filterValue","setState","value","onChange","event","target","PersonForm","props","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setNotification","onSubmit","preventDefault","newPerson","name","number","index","findIndex","person","personService","then","response","type","message","data","concat","catch","error","window","confirm","newPersons","Person","deletePerson","personToRemove","filter","console","log","key","onClick","confirmDeletePerson","PersonList","nameFilter","map","toLowerCase","indexOf","Notification","notification","setTimeout","className","App","useState","setNameFilter","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0865ec5a.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl);\r\n};\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove,\r\n};","import React from 'react'\r\n\r\nconst FilterForm = ({filterValue, setState}) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input\r\n            value={filterValue}\r\n            onChange={event => setState(event.target.value)}\r\n        />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterForm;\r\n","import React from 'react';\r\nimport personService from '../services/persons';\r\n\r\nconst PersonForm = (props) => {\r\n    const {\r\n        persons,\r\n        setPersons,\r\n        newName,\r\n        setNewName,\r\n        newNumber,\r\n        setNewNumber,\r\n        setNotification,\r\n    } = props;\r\n\r\n    const addPerson = event => {\r\n        event.preventDefault();\r\n        const newPerson = {\r\n            name: newName,\r\n            number: newNumber,\r\n        };\r\n\r\n        const index = persons.findIndex(person => person.name === newPerson.name);\r\n\r\n        if (index < 0) {\r\n            personService\r\n                .create(newPerson)\r\n                .then(response => {\r\n                    setNotification({ type: 'success', message: `Person \"${response.data.name}\" was added successfully!`});\r\n                    setPersons(persons.concat(response.data));\r\n                    setNewName('');\r\n                    setNewNumber('');\r\n                })\r\n                .catch(error => {\r\n                    setNotification({ type: 'error', message: `Could not add person \"${newPerson.name}\" to phonebook!`});\r\n                })\r\n        } else if (persons[index].number !== newPerson.number) {\r\n            if (window.confirm(`\"${newPerson.name}\" is already added to phonebook, replace the old number with the new one?`)) {\r\n                personService\r\n                    .update(persons[index].id, newPerson)\r\n                    .then(response => {\r\n                        const newPersons = [...persons];\r\n                        setNotification({ type: 'success', message: `The number of \"${newPerson.name}\" was updated successfully!`});\r\n                        newPersons[index].number = response.data.number;\r\n                        setPersons(newPersons);\r\n                        setNewName('');\r\n                        setNewNumber('');\r\n                    })\r\n                    .catch(error => {\r\n                        setNotification({ type: 'error', message: `Could not update number for person \"${newPerson.name}\"!`});\r\n                    });\r\n            }\r\n        } else {\r\n            setNotification({ type: 'error', message: `Person \"${newPerson.name}\" is already added to phonebook!`});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input\r\n                    value={newName}\r\n                    onChange={event => setNewName(event.target.value)}\r\n                />\r\n                    <div>number: <input\r\n                        value={newNumber}\r\n                        onChange={event => setNewNumber(event.target.value)}\r\n                    />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\nimport personService from '../services/persons';\r\n\r\nconst Person = ({person, persons, setPersons, setNotification}) => {\r\n\r\n    const confirmDeletePerson = (person) => {\r\n        if (window.confirm(`Delete \"${person.name}\"?`)) {\r\n            deletePerson(person);\r\n        }\r\n    };\r\n\r\n    const deletePerson = personToRemove => {\r\n        personService.remove(personToRemove.id)\r\n            .then(response => {\r\n                setNotification({type: 'success', message: `Person \"${personToRemove.name}\" was removed from phonebook!`});\r\n                setPersons(persons.filter(person => personToRemove.id !== person.id));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setNotification({type: 'error', message: `Could not remove person \"${personToRemove.name}\"!`});\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div key={person.name}>\r\n            {person.name}\r\n            &nbsp;\r\n            {person.number}\r\n            &nbsp;\r\n            <button\r\n                onClick={() => confirmDeletePerson(person)}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>);\r\n};\r\n\r\nexport default Person;\r\n","import React from 'react';\r\nimport Person from './Person';\r\n\r\nconst PersonList = ({persons, setPersons, nameFilter, setNotification}) => {\r\n    return (\r\n        <>\r\n            {persons.map(person => {\r\n                if (person.name.toLowerCase().indexOf(nameFilter.toLowerCase()) >= 0) {\r\n                    return <Person\r\n                        key={person.name}\r\n                        person={person}\r\n                        setPersons={setPersons}\r\n                        persons={persons}\r\n                        setNotification={setNotification}\r\n                    />\r\n                }\r\n                return null;\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PersonList;\r\n","import React from 'react';\r\n\r\nconst Notification = ({notification, setNotification}) => {\r\n    if (!notification || notification.message === null) {\r\n        return null\r\n    }\r\n\r\n    // type should be either error, warning or success\r\n    let type = notification.type ? notification.type : 'warning';\r\n\r\n    setTimeout(() => {\r\n        setNotification(null);\r\n    }, 4000);\r\n\r\n    return (\r\n        <div className={`message ${type}`}>\r\n            {notification.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\nimport personService from './services/persons';\r\nimport './index.css';\r\nimport FilterForm from './components/FilterForm';\r\nimport PersonForm from './components/PersonForm';\r\nimport PersonList from './components/PersonList';\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [nameFilter, setNameFilter] = useState('');\r\n    const [notification, setNotification] = useState(null);\r\n\r\n    const hook = () => {\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                setPersons(response.data)\r\n            })\r\n    }\r\n\r\n    useEffect(hook, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification\r\n                notification={notification}\r\n                setNotification={setNotification}\r\n            />\r\n            <FilterForm filterValue={nameFilter} setState={setNameFilter}/>\r\n            <h2>Add New</h2>\r\n            <PersonForm\r\n                persons={persons}\r\n                setPersons={setPersons}\r\n                newName={newName}\r\n                setNewName={setNewName}\r\n                newNumber={newNumber}\r\n                setNewNumber={setNewNumber}\r\n                setNotification={setNotification}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <PersonList\r\n                persons={persons}\r\n                setPersons={setPersons}\r\n                nameFilter={nameFilter}\r\n                setNotification={setNotification}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}